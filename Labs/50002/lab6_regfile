
*.include "50002/nominal.jsim" 
*.include "50002/stdcell.jsim" 
*.include "50002/lab6regfile.jsim"


* Reg
.subckt regfile clk werf ra2sel ra[4:0] rb[4:0] rc[4:0]
+ wdata[31:0] radata[31:0] rbdata[31:0]

Xregfile 
+ vdd 0 0 ra[4:0] adata[31:0] // A read port 
+ vdd 0 0 ra2mux[4:0] bdata[31:0] // B read port 
+ 0 clk werf rc[4:0] wdata[31:0] // write port 
+ $memory width=32 nlocations=31

* select correct address for B read port; ra2sel=0 take Rb
Xmux ra2sel#5 rb[4:0] rc[4:0] ra2mux[4:0] mux2

* check if either register is R31; output regA/regB to 1 if its R31
Xreg31a1 ra[3] ra[2] ra[1] ra[0] X and4   // if all bits of RA are 1, output 1
Xreg31a2 ra[4] X regA and2 	// checking if ra is r31

Xreg31sec1 ra2mux[3] ra2mux[2] ra2mux[1] ra2mux[0] Y and4
Xreg31sec2 ra2mux[4] Y regB and2

* force R31 to '0'. If regA/regB = 1 --> take all 0s
Xforcemux regA#32 adata[31:0] 0#32 radata[31:0] mux2
Xforcemux2 regB#32 bdata[31:0] 0#32 rbdata[31:0] mux2

.ends